"use strict";(self.webpackChunkic_design_system=self.webpackChunkic_design_system||[]).push([[3032],{3032:function(t,e,a){a.r(e),a.d(e,{ic_tab_context:function(){return b}});var s=a(9917),i=a(6040);const b=class{constructor(t){(0,s.r)(this,t),this.icTabSelect=(0,s.c)(this,"icTabSelect",3),this.tabSelect=(0,s.c)(this,"tabSelect",3),this.newTabPanels=[],this.newTabs=[],this.linkTabs=()=>{this.tabs.forEach(((t,e)=>{const a=`ic-tab-${e}-context-${this.contextId}`,s=`ic-tab-panel-${e}-context-${this.contextId}`,b=`ic-tab--${e}-context-${this.contextId}`,n="context-id";t.setAttribute("id",a),t.tabId=b,t.tabPosition=e,t.setAttribute("aria-controls",s),t.setAttribute(n,this.contextId),this.tabGroup.setAttribute(n,this.contextId),this.tabPanels[e].setAttribute("id",s),this.tabPanels[e].panelId=b,this.tabPanels[e].tabPosition=e,this.tabPanels[e].setAttribute("aria-labelledby",a),this.tabPanels[e].setAttribute(n,this.contextId),this.appearance===i.I.Light&&(t.appearance=this.appearance,this.tabPanels[e].appearance=this.appearance)})),this.appearance===i.I.Light&&(this.tabGroup.appearance=this.appearance)},this.getChildren=()=>{this.tabGroup=this.el.querySelector("ic-tab-group"),this.tabs=Array.from(this.tabGroup.querySelectorAll("ic-tab")),this.tabPanels=Array.from(this.el.children).filter((t=>"IC-TAB-PANEL"===t.tagName)),this.enabledTabs=this.getEnabledTabs()},this.keydownHandler=t=>{"automatic"===this.activationType?this.handleKeyBoardNavAutomatic(t):this.handleKeyBoardNavManual(t)},this.attachEventListeners=()=>{this.tabGroup.addEventListener("keydown",this.keydownHandler)},this.setControlledMode=()=>{void 0!==this.selectedTabIndex&&(this.controlledMode=!0,this.selectedTab=this.selectedTabIndex)},this.setInitialTab=()=>{if(this.controlledMode)this.selectedTab=this.selectedTabIndex,this.focusedTabIndex=this.selectedTabIndex;else{const t=this.tabs.findIndex((t=>t.tabId===this.enabledTabs[0].tabId));this.selectedTab=t,this.focusedTabIndex=t}},this.configureTabs=()=>{this.enabledTabs.forEach((t=>{t.selected=t.tabPosition===this.selectedTab})),this.tabPanels.forEach((t=>{t.selectedTab=this.tabs[this.selectedTab].tabId}))},this.getEnabledTabs=()=>Array.from(this.tabs).filter((t=>!t.disabled)),this.getIndexOfEnabledTab=t=>this.enabledTabs.findIndex((e=>e.tabId===this.tabs[t].tabId)),this.keyboardSelectTab=t=>{const e=this.tabs.findIndex((e=>e.tabId===this.enabledTabs[t].tabId));this.enabledTabs[t].focus(),this.controlledMode?(this.icTabSelect.emit({tabIndex:e,tabLabel:this.el.querySelectorAll("ic-tab")[e].textContent.trim()}),this.tabSelect.emit({tabIndex:e,tabLabel:this.el.querySelectorAll("ic-tab")[e].textContent.trim()})):this.selectedTab=e},this.keyboardFocusTab=t=>{const e=this.tabs.findIndex((e=>e.tabId===this.enabledTabs[t].tabId));this.enabledTabs[t].focus(),this.focusedTabIndex=e},this.handleKeyBoardNavAutomatic=t=>{const e=t.key,a=this.getIndexOfEnabledTab(this.selectedTab);let s=!0;switch(e){case"Home":this.keyboardSelectTab(0);break;case"End":this.keyboardSelectTab(this.enabledTabs.length-1);break;case"ArrowRight":a<this.enabledTabs.length-1?this.keyboardSelectTab(a+1):this.keyboardSelectTab(0);break;case"ArrowLeft":a>0?this.keyboardSelectTab(a-1):this.keyboardSelectTab(this.enabledTabs.length-1);break;default:s=!1}s&&t.preventDefault()},this.handleKeyBoardNavManual=t=>{const e=t.key,a=this.getIndexOfEnabledTab(this.focusedTabIndex);let s=!0;switch(e){case"Home":this.keyboardFocusTab(0);break;case"End":this.keyboardFocusTab(this.enabledTabs.length-1);break;case"ArrowRight":a<this.enabledTabs.length-1?this.keyboardFocusTab(a+1):this.keyboardFocusTab(0);break;case"ArrowLeft":a>0?this.keyboardFocusTab(a-1):this.keyboardFocusTab(this.enabledTabs.length-1);break;case"Enter":case" ":this.keyboardSelectTab(this.focusedTabIndex);break;default:s=!1}s&&t.preventDefault()},this.selectedTab=void 0,this.activationType="automatic",this.appearance="dark",this.contextId="default",this.selectedTabIndex=void 0}watchAppearanceHandler(){this.tabs.forEach(((t,e)=>{t.appearance=this.appearance,this.tabPanels[e].appearance=this.appearance})),this.tabGroup.appearance=this.appearance}updateSelectedTab(t){this.selectedTab=t}componentDidLoad(){this.setControlledMode(),this.getChildren(),this.linkTabs(),this.attachEventListeners(),this.setInitialTab(),this.configureTabs()}componentWillUpdate(){this.configureTabs()}disconnectedCallback(){this.tabGroup.removeEventListener("keydown",this.keydownHandler)}tabClickHandler(t){void 0===this.selectedTabIndex&&t.detail.contextId===this.contextId&&(this.selectedTab=t.detail.position),this.icTabSelect.emit({tabIndex:t.detail.position,tabLabel:this.el.querySelectorAll("ic-tab")[t.detail.position].textContent.trim()}),this.tabSelect.emit({tabIndex:t.detail.position,tabLabel:this.el.querySelectorAll("ic-tab")[t.detail.position].textContent.trim()}),t.stopImmediatePropagation()}tabCreatedHandler(t){this.tabs&&this.tabPanels&&((t.detail.setFocus?this.newTabs:this.newTabPanels).push(t.detail),this.newTabs.length===this.newTabPanels.length&&(this.tabs.push(...this.newTabs),this.tabPanels.push(...this.newTabPanels),this.enabledTabs=this.getEnabledTabs(),this.linkTabs(),this.newTabs=[],this.newTabPanels=[]))}tabEnabledHandler(){this.enabledTabs=this.getEnabledTabs()}async tabRemovedHandler(t){this.getChildren(),this.enabledTabs=this.getEnabledTabs(),this.linkTabs(),this.tabs[this.selectedTab]&&this.tabPanels[this.selectedTab]?(this.tabs[this.selectedTab].selected=!0,this.tabPanels[this.selectedTab].selectedTab=this.tabs[this.selectedTab].tabId):this.setInitialTab(),t&&this.tabs[this.selectedTab].setFocus()}render(){return(0,s.h)("slot",null)}get el(){return(0,s.g)(this)}static get watchers(){return{appearance:["watchAppearanceHandler"],selectedTabIndex:["updateSelectedTab"]}}}}}]);